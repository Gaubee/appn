const u=r=>i(r,()=>{}),i=(r,n)=>{for(const t of r)return t;return n()},f=(r,n)=>{const t=[];let e=0;if(n)for(const o of r){const l=n(o,e++,r);l!=null&&t.push(l)}else for(const o of r)o!=null&&t.push(o);return t},s=(r,n)=>{let t=0;if(n)for(const e of r){const o=n(e,t++,r);if(o!=null)return o}else for(const e of r)if(e!=null)return e},_=r=>Symbol.iterator in r?r:"length"in r?{[Symbol.iterator]:()=>{let n=0;return{next:()=>{const t=n<r.length;return t?{done:t,value:void 0}:{done:t,value:r[n++]}}}}}:{[Symbol.iterator](){return r}};export{u as a,f as b,s as c,_ as i};
