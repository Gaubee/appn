const p="modulepreload",v=function(e){return"/"+e},m={},g=function(o,t,l){let r=Promise.resolve();if(t&&t.length>0){let c=function(n){return Promise.all(n.map(u=>Promise.resolve(u).then(a=>({status:"fulfilled",value:a}),a=>({status:"rejected",reason:a}))))};document.getElementsByTagName("link");const s=document.querySelector("meta[property=csp-nonce]"),d=s?.nonce||s?.getAttribute("nonce");r=c(t.map(n=>{if(n=v(n),n in m)return;m[n]=!0;const u=n.endsWith(".css"),a=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${n}"]${a}`))return;const i=document.createElement("link");if(i.rel=u?"stylesheet":p,u||(i.as="script"),i.crossOrigin="",i.href=n,d&&i.setAttribute("nonce",d),document.head.appendChild(i),u)return new Promise((_,h)=>{i.addEventListener("load",_),i.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${n}`)))})}))}function f(c){const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=c,window.dispatchEvent(s),!s.defaultPrevented)throw c}return r.then(c=>{for(const s of c||[])s.status==="rejected"&&f(s.reason);return o().catch(f)})},y=e=>E(e,()=>{}),E=(e,o)=>{for(const t of e)return t;return o()},P=(e,o)=>{const t=[];let l=0;if(o)for(const r of e){const f=o(r,l++,e);f!=null&&t.push(f)}else for(const r of e)r!=null&&t.push(r);return t},w=(e,o)=>{let t=0;if(o)for(const l of e){const r=o(l,t++,e);if(r!=null)return r}else for(const l of e)if(l!=null)return l};export{g as _,P as a,w as b,y as i};
