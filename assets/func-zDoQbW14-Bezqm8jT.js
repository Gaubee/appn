Promise.withResolvers===void 0&&(Promise.withResolvers=()=>{const e={};return e.promise=new Promise((n,r)=>{e.resolve=n,e.reject=r}),e});const i=e=>e.call.bind(e),o=e=>function(...n){return e(this,...n)},c=(e,n)=>{let r;const t=Object.assign(function(...u){const l=n?.apply(this,u);return(r===void 0||l!==r.key)&&(r={key:l,res:e.apply(this,u)}),r.res},{get source(){return e},get key(){return r?.key},get runned(){return r!=null},get returnValue(){return r?.res},reset(){r=void 0},rerun(...u){return t.reset(),t(...u)}});return Object.defineProperties(t,{source:{value:e,writable:!1,configurable:!0,enumerable:!0},key:{get:()=>r?.key,configurable:!0,enumerable:!0},runned:{get:()=>r!=null,configurable:!0,enumerable:!0},returnValue:{get:()=>r?.res,configurable:!0,enumerable:!0}}),t},a=e=>{let n;return new Proxy(e,{apply(r,s,t){return n==null&&(n=Reflect.apply(e,s,t)),Reflect.apply(n,s,t)}})};export{c as a,o as c,a as f,i as u};
